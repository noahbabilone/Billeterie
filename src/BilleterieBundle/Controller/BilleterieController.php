<?phpnamespace BilleterieBundle\Controller;use BilleterieBundle\Entity\Post;use BilleterieBundle\Form\PostType;use BilleterieBundle\Form\TicketType;use Symfony\Bundle\FrameworkBundle\Controller\Controller;use Symfony\Component\HttpFoundation\Request;use Symfony\Component\HttpFoundation\Response;use BilleterieBundle\Entity\Ticket;class BilleterieController extends Controller{    public function indexAction()    {        return $this->render('BilleterieBundle:Billeterie:index.html.twig');    }    public function blogViewAction($slug)    {        $em = $this->getDoctrine()->getManager();        $blog = $em->getRepository('BilleterieBundle:Post')->findOneBySlug($slug);        if ($blog === null) {            throw $this->createNotFoundException("L'annonce demandée n'existe plus.");        }        return $this->render('BilleterieBundle:Billeterie:view.html.twig', array(            'blog' => $blog        ));    }    public function postsAction()    {        $em = $this->getDoctrine()->getManager();        $posts = $em->getRepository('BilleterieBundle:Post')->findAll();        return $this->render('BilleterieBundle:Billeterie:posts.html.twig',            array(                "posts" => $posts            ));    }    /**     * @param Request $request     * @return response     */    public function sendMailAction(Request $request)    {        if ($request->isXmlHttpRequest()) {            $name = $request->get('name');            $email = $request->get('email');            $subject = $request->get('subject');            $message = $request->get('message');            $reply = "contact@billeterie.fr";            $mail = \Swift_Message::newInstance();            $recipient = $this->getParameter('sendmail');            $mail                ->setFrom($email)                ->setTo($recipient)                ->setSubject($subject)                ->setBody($message)                ->setReplyTo($reply, $name)                ->setContentType('text / html');            $this->container->get('mailer')->send($mail);            $this->get('mailer')->send($mail);            return new response (json_encode(array('response' => 'success', 'message' => 'Votre message a été envoyé.')));        }        return new response (json_encode(array('response' => 'Error', 'message' => 'No Send')));    }    /**     * @param Request $request     * @return Response     */    public function addTicketAction(Request $request)    {        $ticket = new Ticket();        $form = $this->createForm(TicketType::class, $ticket);        if ($form->handleRequest($request)->isValid()) {        }        return $this->render('BilleterieBundle:Billeterie:addTicket.html.twig', array(                'form' => $form->createView()            )        );    }    /**     * @param Request $request     * @return Response     */    public function addPostAction(Request $request)    {        $post = new Post();        $form = $this->createForm(PostType::class, $post);        if ($form->handleRequest($request)->isValid()) {            $em = $this->getDoctrine()->getManager();            $em->persist($post);            $em->flush();            return $this->redirect($this->generateUrl('billeterie_blog_view', array('slug' => $post->getSlug())));        }        return $this->render('BilleterieBundle:Billeterie:postForm.html.twig', array(                'form' => $form->createView(),                'post' => $post            )        );    }    public function editPostAction(Request $request, $slug)    {        $modified= false;        $em = $this->getDoctrine()->getManager();        $post = $em->getRepository('BilleterieBundle:Post')->findOneBySlug($slug);        if (null === $post) {            throw $this->createNotFoundException("Le blog n'existe plus.");        }        $form = $this->createForm(PostType::class, $post);        if ($form->handleRequest($request)->isValid()) {            $em->flush();            $modified= true;        }        return $this->render('BilleterieBundle:Billeterie:postForm.html.twig', array(                'form' => $form->createView(),                'modified' => $modified,                'post' =>$post                            )        );    }}
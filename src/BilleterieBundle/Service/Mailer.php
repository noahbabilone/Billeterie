<?phpnamespace BilleterieBundle\Service;use Symfony\Component\DependencyInjection\ContainerInterface as Container;class Mailer{//    private $from = "no-reply@billeterie.fr";    private $reply = "contact@billeterie.fr";    private $name = "Yann-dev";    private $recipient;    public function __construct($recipient)    {      $this->recipient= $recipient;    }    public function sendMail($name, $email, $subject, $message)    {//            $name = $request->get('name');//            $email = $request->get('email');//            $subject = $request->get('subject');//            $message = $request->get('message');//            $email_from = $email;//            if (!empty($name) && !empty($email) && !empty($subject) && !empty($message) && !empty($email_from)) {//                $email_to = 'noahbabilone@email.com';//                $body = 'Name: ' . $name . "\n\n" . 'Email: ' . $email . "\n\n" . 'Subject: ' . $subject . "\n\n" . 'Message: ' . $message;////                $success = @mail($email_to, $subject, $body, 'From: <' . $email_from . '>');//                return new response (json_encode(array('message' => 'Success', 'result' => "M")));//            } else {//                return new response (json_encode(array('message' => 'Error', 'typeError' => "Variable null")));//            }    }    public function sendMessage($from, $subject, $body)    {        $mail = \Swift_Message::newInstance();        $mail            ->setFrom($from)            ->setTo($this->recipient)            ->setSubject($subject)            ->setBody($body)            ->setReplyTo($this->reply, $this->name)            ->setContentType('text / html');            $this->container->get('mailer')->send($mail);    }}